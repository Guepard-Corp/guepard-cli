name: Publish Chocolatey

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.26.15)'
        required: true
        type: string

jobs:
  publish-choco:
    name: Publish Chocolatey using release asset
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List available releases
        run: |
          echo "Available releases:"
          curl -s https://api.github.com/repos/Guepard-Corp/guepard-cli/releases | jq -r '.[].tag_name' | head -10

      - name: Set version
        id: ver
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Download Windows release asset
        run: |
          mkdir -p dist
          curl -L -o dist/guepard-cli-${{ steps.ver.outputs.version }}-windows-amd64.zip \
            "https://github.com/Guepard-Corp/guepard-cli/releases/download/v${{ steps.ver.outputs.version }}/guepard-cli-${{ steps.ver.outputs.version }}-windows-amd64.zip"

      - name: Compute Windows zip checksum
        id: sha
        run: |
          SHASUM=$(sha256sum "dist/guepard-cli-${{ steps.ver.outputs.version }}-windows-amd64.zip" | awk '{print $1}')
          echo "sha=${SHASUM}" >> "$GITHUB_OUTPUT"

      - name: Update nuspec and install.ps1
        run: |
          NUSPEC="chocolatey/guepard.nuspec"
          PS1="chocolatey/tools/chocolateyInstall.ps1"
          # Update version in nuspec
          sed -i "s#<version>.*</version>#<version>${{ steps.ver.outputs.version }}</version>#" "$NUSPEC"
          # Update release notes header (best effort)
          sed -i "s#Version .*:#Version ${{ steps.ver.outputs.version }}:#" "$NUSPEC"
          # Update URL and checksum in install script
          sed -i "s#guepard-cli-.*-windows-amd64.zip#guepard-cli-${{ steps.ver.outputs.version }}-windows-amd64.zip#" "$PS1"
          sed -i "s#releases/download/v.*#/releases/download/v${{ steps.ver.outputs.version }}#" "$PS1"
          sed -i "s#^\$checksum = '.*'#\$checksum = '${{ steps.sha.outputs.sha }}'#" "$PS1"

      - name: Setup Chocolatey
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-devel curl
          # Fetch latest NuGet.exe and create a wrapper so `nuget` works via mono
          sudo curl -L -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
          sudo sh -c 'printf "%s\n" "#!/usr/bin/env bash" "exec mono /usr/local/bin/nuget.exe \"$@\"" > /usr/local/bin/nuget'
          sudo chmod +x /usr/local/bin/nuget

      - name: Pack Chocolatey package (nuspec)
        run: |
          cd chocolatey
          nuget pack guepard.nuspec -BasePath . -OutputDirectory ../dist

      - name: Push to Chocolatey
        if: ${{ success() }}
        env:
          CHOCO_API_KEY: ${{ secrets.CHOCO_API_KEY }}
        run: |
          if [ -z "$CHOCO_API_KEY" ]; then
            echo "CHOCO_API_KEY secret is missing" >&2
            exit 1
          fi
          nupkg=$(ls dist/*.nupkg | head -n1)
          nuget push "$nupkg" -ApiKey "$CHOCO_API_KEY" -Source https://push.chocolatey.org/
